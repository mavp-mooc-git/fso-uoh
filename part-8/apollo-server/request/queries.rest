@baseUrl = http://localhost:4000/graphql
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1sdXVra2FpIiwiaWQiOiI2MTNkMTIxZDljY2QyNTQ4NjllY2UwYjkiLCJpYXQiOjE2MzE5MzE3NzR9.qmpi-Ex1OwdrNkEXzbmMUlEJTmNU3M2rHrqazzmdv8s
@contentType = application/json

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  bookCount
  authorCount
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allBooks {
    title
    author {
      name
    }
    published
    genres
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allAuthors {
    name
    bookCount
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allBooks(author: "Robert Martin") {
    title
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allBooks(genre: "refactoring") {
    title
    author {
      name
    }
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allBooks(
    author: "Robert Martin",
    genre: "refactoring"
  ) {
    title
    author {
      name
    }
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation {
  addBook(
    title: "Clean Code",
    author: "Robert Martin",
    published: 2008,
    genres: ["refactoring"]
  ) {
    title
    author {
      name
    }
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation {
  addBook(
    title: "NoSQL Distilled",
    author: "Martin Fowler",
    published: 2012,
    genres: ["database", "nosql"]
  ) {
    title
    author {
      name
    }
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation {
  addBook(
    title: "Pimeyden tango",
    author: "Reijo Mäki",
    published: 1997,
    genres: ["crime"]
  ) {
    title
    author {
      name
    }
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

query {
  allAuthors {
    name
    born
    bookCount
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation {
  editAuthor(
    name: "Reijo Mäki",
    setBornTo: 1950
  ) {
    name
    born
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

mutation {
  createUser(
    username: "mluukkai",
    favoriteGenre: "refactoring"
  ) {
    username
    favoriteGenre
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

mutation {
  createUser(
    username: "root",
    favoriteGenre: "patterns"
  ) {
    username
    favoriteGenre
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

mutation {
  login(
    username: "mluukkai",
    password: "sekret"
  ) {
    value
  }
}

#####
POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

query {
  me {
    id
    username
  }
}

#####
POST ws://localhost:4000/graphql HTTP/1.1
// Unsupported protocol "ws:"
//POST {{baseUrl}} HTTP/1.1
Content-Type: {{contentType}}
X-REQUEST-TYPE: GraphQL

subscription {
  bookAdded {
    title
    author {
      name
    }
  }
}

