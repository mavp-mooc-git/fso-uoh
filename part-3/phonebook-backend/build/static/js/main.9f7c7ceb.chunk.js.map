{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","event","onChange","Persons","obj","query","callback","filter","p","name","toLowerCase","indexOf","map","number","id","key","type","onClick","PersonForm","action","valname","evname","valnumber","evnumber","onSubmit","Notification","message","notclass","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showPersons","setShowPersons","showMessage","setShowMessage","typeClass","setTypeClass","useEffect","personService","initialPersons","catch","error","newMessage","toString","msg","setTimeout","handleUpdate","person","find","changedPerson","returnedPerson","console","log","target","preventDefault","personObject","pname","idx","pid","window","alert","concat","newobj","elem","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f7c7ceb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value, event}) => {\n  return (\n    <div>\n      filter shown with: <input value={value} onChange={event} />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Persons = ({obj, query, callback}) => {\n  const aux = () => obj.filter(p => p.name.toLowerCase().indexOf(query.toLowerCase()) > -1)\n  const result = () => aux().map(p => {\n    return [p.name, p.number, p.id]\n  })\n  return (\n    result().map((p) => {\n      const [name, number, id] = [p[0], p[1], p[2]]\n      return <p key={name}>\n               {name} {number}\n               <button type=\"button\" onClick={() => callback(id, obj)}>\n                 delete\n               </button>\n             </p>\n    })\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = ({action, valname, evname, valnumber, evnumber}) => {\n  return (\n    <form onSubmit={action}>\n      <div>\n        name: <input value={valname} onChange={evname} />\n      </div>\n      <div>\n        number: <input value={valnumber} onChange={evnumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  const notclass = (type) ? `notif ${type}` : \"notif\"\n  if (message === null) {\n    return null\n  }\n\n  return (\n      <div className={notclass}>\n        {message}\n      </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n//const remove = (id, newObject) => {\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showPersons, setShowPersons ] = useState('')\n  const [ showMessage, setShowMessage ] = useState(null)\n  const [typeClass, setTypeClass] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => {\n        //console.log('Fail promise', error)\n        newMessage(error.toString(), 'fail')\n      })\n  }\n  useEffect(hook, [])\n\n  const newMessage = (msg, type) => {\n    setShowMessage(msg)\n    setTypeClass(type)\n    setTimeout(() => {\n      setShowMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const pname = persons.map(p => p.name)\n\n    if(pname.indexOf(newName) !== -1) {\n      const idx = pname.indexOf(newName)\n      const pid = persons[idx].id\n      window.alert(\n        `${newName} is already added to phonebook, replace the old number with a new one.`\n      );\n      handleUpdate(pid)\n    }\n    else if(newName === \"\" || newNumber === \"\" ) {\n      window.alert(\"name or number fields can't be empty\");\n    } else {\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        newMessage(`Added: ${newName}`, 'msg')\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        //console.log('Fail promise', error)\n        newMessage(error.toString(), 'fail')\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleChangePersons = (event) => {\n    setShowPersons(event.target.value)\n  }\n\n  const handleDelete = (id, obj) => {\n    const delname = () => obj.filter(p => p.id.toString().toLowerCase().indexOf(id.toString().toLowerCase()) !== -1)\n    const newobj = () => obj.filter(p => p.id.toString().toLowerCase().indexOf(id.toString().toLowerCase()) === -1)\n    const elem = delname()[0].name\n    if (window.confirm(`Do you want to delete ${elem}?`)) {\n      personService\n      .remove(id)\n      .then(() => {\n        setPersons(newobj)\n        newMessage(`Deleted person`, 'msg')\n      })\n      .catch(error => {\n        //console.log('Fail handleDelete', error)\n        newMessage(error.toString(), 'fail')\n      })\n    }\n  }\n\n  const handleUpdate = (id) => {\n    const person = persons.find(p => p.id === id)\n    const changedPerson = { ...person, name: newName, number: newNumber }\n    personService\n    .update(id, changedPerson)\n    .then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n      newMessage(`Updated: ${newName}`, 'msg')\n      setNewName('')\n      setNewNumber('')\n    })\n    .catch(error => {\n      console.log('Fail handleUpdate', error)\n      newMessage(`Information of ${newName} has already been removed from server`, 'fail')\n    })\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={showMessage} type={typeClass} />\n\n      <Filter value={showPersons} event={handleChangePersons} />\n\n      <h2>Add a new</h2>\n      <PersonForm action={addPerson}\n          valname={newName} evname={handleNameChange}\n          valnumber={newNumber} evnumber={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons obj={persons} query={showPersons} callback={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}